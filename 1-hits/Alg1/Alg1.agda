{-# OPTIONS --without-K #-}

open import lib.Basics
open import Container
open import 1-hits.Spec

module 1-hits.Alg1.Alg1 (s : Spec) where

open Spec s
open import 1-hits.Alg0.Alg F‚ÇÄ
open import 1-hits.Target s

has-alg‚ÇÅ :
  (X : Type0)
  (Œ∏‚ÇÄ : has-alg‚ÇÄ X)
  ‚Üí Type0
has-alg‚ÇÅ X Œ∏‚ÇÄ = (x : ‚ü¶ F‚ÇÅ ‚üß‚ÇÄ X) ‚Üí G‚ÇÅ‚ÇÄ X Œ∏‚ÇÄ x

record Alg‚ÇÅ-obj : Type1 where
  constructor mk-alg‚ÇÅ
  field
   X : Type0
   Œ∏‚ÇÄ : has-alg‚ÇÄ X
   Œ∏‚ÇÅ : has-alg‚ÇÅ X Œ∏‚ÇÄ

is-alg‚ÇÅ-hom :
  {X Y : Type0}
  (Œ∏‚ÇÄ : has-alg‚ÇÄ X)
  (œÅ‚ÇÄ : has-alg‚ÇÄ Y)
  (Œ∏‚ÇÅ : has-alg‚ÇÅ X Œ∏‚ÇÄ)
  (œÅ‚ÇÅ : has-alg‚ÇÅ Y œÅ‚ÇÄ)
  (f : X ‚Üí Y)
  (f‚ÇÄ : is-alg‚ÇÄ-hom Œ∏‚ÇÄ œÅ‚ÇÄ f)
  ‚Üí Type0
is-alg‚ÇÅ-hom {X} Œ∏‚ÇÄ œÅ‚ÇÄ Œ∏‚ÇÅ œÅ‚ÇÅ f f‚ÇÄ =
  (x : ‚ü¶ F‚ÇÅ ‚üß‚ÇÄ X) ‚Üí G‚ÇÅ‚ÇÅ Œ∏‚ÇÄ œÅ‚ÇÄ f f‚ÇÄ x (Œ∏‚ÇÅ x) == œÅ‚ÇÅ (‚ü¶ F‚ÇÅ ‚üß‚ÇÅ f x) 

record Alg‚ÇÅ-hom (ùìß ùì® : Alg‚ÇÅ-obj) : Type0 where
  constructor mk-alg‚ÇÅ-hom
  open Alg‚ÇÅ-obj ùìß
  open Alg‚ÇÅ-obj ùì® renaming (X to Y ; Œ∏‚ÇÄ to œÅ‚ÇÄ ; Œ∏‚ÇÅ to œÅ‚ÇÅ)
  
  field
    f : X ‚Üí Y
    f‚ÇÄ : is-alg‚ÇÄ-hom Œ∏‚ÇÄ œÅ‚ÇÄ f
    f‚ÇÅ : is-alg‚ÇÅ-hom Œ∏‚ÇÄ œÅ‚ÇÄ Œ∏‚ÇÅ œÅ‚ÇÅ f f‚ÇÄ

Alg‚ÇÅ-comp :
  {X Y Z : Alg‚ÇÅ-obj}
  ‚Üí Alg‚ÇÅ-hom Y Z
  ‚Üí Alg‚ÇÅ-hom X Y
  ‚Üí Alg‚ÇÅ-hom X Z
Alg‚ÇÅ-comp {mk-alg‚ÇÅ X Œ∏‚ÇÄ Œ∏‚ÇÅ} {mk-alg‚ÇÅ Y œÅ‚ÇÄ œÅ‚ÇÅ} {mk-alg‚ÇÅ Z Œ∂‚ÇÄ Œ∂‚ÇÅ} (mk-alg‚ÇÅ-hom g g‚ÇÄ g‚ÇÅ) (mk-alg‚ÇÅ-hom f f‚ÇÄ f‚ÇÅ)
  = mk-alg‚ÇÅ-hom
     (g ‚àò f)
     (Œª x ‚Üí g‚ÇÄ‚àôf‚ÇÄ x)
     (Œª x ‚Üí G‚ÇÅ‚ÇÅ-comp Œ∏‚ÇÄ œÅ‚ÇÄ Œ∂‚ÇÄ g f g‚ÇÄ f‚ÇÄ x (Œ∏‚ÇÅ x) ‚àô ap (G‚ÇÅ‚ÇÅ œÅ‚ÇÄ Œ∂‚ÇÄ g g‚ÇÄ (‚ü¶ F‚ÇÅ ‚üß‚ÇÅ f x)) (f‚ÇÅ x) ‚àô g‚ÇÅ (‚ü¶ F‚ÇÅ ‚üß‚ÇÅ f x))
   where
     g‚ÇÄ‚àôf‚ÇÄ : (x : ‚ü¶ F‚ÇÄ ‚üß‚ÇÄ X) ‚Üí (g ‚àò f) (Œ∏‚ÇÄ x) == Œ∂‚ÇÄ (‚ü¶ F‚ÇÄ ‚üß‚ÇÅ (g ‚àò f) x)
     g‚ÇÄ‚àôf‚ÇÄ x = ap g (f‚ÇÄ x) ‚àô g‚ÇÄ (‚ü¶ F‚ÇÄ ‚üß‚ÇÅ f x)

Alg‚ÇÅ-id :
  (X : Alg‚ÇÅ-obj)
  ‚Üí Alg‚ÇÅ-hom X X
Alg‚ÇÅ-id (mk-alg‚ÇÅ X Œ∏‚ÇÄ Œ∏‚ÇÅ) =
  mk-alg‚ÇÅ-hom (idf X) (Œª x ‚Üí idp) (Œª x ‚Üí G‚ÇÅ‚ÇÅ-id Œ∏‚ÇÄ x (Œ∏‚ÇÅ x))
